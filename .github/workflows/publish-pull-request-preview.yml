# This workflow takes a previously-built PR copy of the game
# and uploads it to Netlify as a preview deployment,
# also dropping a link to that deploy into the PR comments
# 
# See https://securitylab.github.com/research/github-actions-preventing-pwn-requests
# for context why this is two workflows instead of one.

name: Test and Deploy PRs

on:
  workflow_run:
    workflows: ["Build PR"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # This is taken from https://securitylab.github.com/research/github-actions-preventing-pwn-requests
      # I'm not sure if it's necessary to use this complex logic
      # instead of just giving each artifact a unique name based on PR number
      # but shrug, this is fine.
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));

      - name: unzip artifact
        run: unzip pr.zip; rm pr.zip
      
      - name: Deploy preview to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: '.'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "You can test out these proposed changes!"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}